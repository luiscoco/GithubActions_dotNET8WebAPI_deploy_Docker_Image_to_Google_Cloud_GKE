name: Build, Push, and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: your-project-id
  IMAGE_NAME: your-image-name
  REPOSITORY: your-gcr-repository
  TAG: latest
  GKE_CLUSTER: your-cluster-name
  GKE_ZONE: your-cluster-zone
  DEPLOYMENT_NAME: your-deployment-name
  CONTAINER_PORT: 80
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  GOOGLE_CLOUD_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

    - name: Configure Docker for Google Cloud Artifact Registry
      run: |
        echo '${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}' | gcloud auth activate-service-account --key-file=-
        gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet

    - name: Check if Google Cloud Artifact Registry repository exists
      id: check-repo
      run: |
        if gcloud artifacts repositories describe ${{ env.REPOSITORY }} --location=europe-southwest1 --project=${{ env.PROJECT_ID }}; then
          echo "Repository exists"
        else
          echo "::set-output name=repo_exists::false"
        fi

    - name: Create Google Cloud Artifact Registry repository if it does not exist
      if: steps.check-repo.outputs.repo_exists == 'false'
      run: |
        gcloud artifacts repositories create ${{ env.REPOSITORY }} --repository-format=docker --location=europe-southwest1 --project=${{ env.PROJECT_ID }}
        echo "Repository created"

    - name: Build Docker image
      run: |
        docker build -t europe-southwest1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} .

    - name: Push Docker image
      run: |
        docker push europe-southwest1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

    - name: Verify the image was pushed
      run: |
        gcloud artifacts docker images list europe-southwest1-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}

    - name: Authenticate Kubectl
      run: |
        echo "${{ env.KUBE_CONFIG_DATA }}" > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}
        
    - name: Apply Kubernetes Deployment and Service
      run: |
        kubectl apply -f deployment.yml --validate=false
        kubectl apply -f service.yml --validate=false

    - name: Update Deployment with new image
      run: |
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.IMAGE_NAME }}=us.gcr.io/${{ env.REPOSITORY }}:${{ env.TAG }}
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
