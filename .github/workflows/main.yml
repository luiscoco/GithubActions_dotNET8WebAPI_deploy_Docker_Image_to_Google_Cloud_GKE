name: Build, Push, and Deploy to GKE

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: your-project-id
  IMAGE_NAME: your-image-name
  REPOSITORY: your-gcr-repository
  TAG: latest
  GKE_CLUSTER: your-cluster-name
  GKE_ZONE: your-cluster-zone
  DEPLOYMENT_NAME: your-deployment-name
  CONTAINER_PORT: 80
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  GOOGLE_CLOUD_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

    - name: Configure Docker for Google Cloud Registry
      run: |
        echo ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }} | gcloud auth activate-service-account --key-file=-
        gcloud auth configure-docker us.gcr.io --quiet

    - name: Build Docker image
      run: |
        docker build -t ${{ env.REPOSITORY }}:${{ env.TAG }} .
        docker tag ${{ env.REPOSITORY }}:${{ env.TAG }} us.gcr.io/${{ env.REPOSITORY }}:${{ env.TAG }}

    - name: Push Docker image to Google Cloud Registry
      run: |
        docker push us.gcr.io/${{ env.REPOSITORY }}:${{ env.TAG }}

    - name: Authenticate Kubectl
      run: |
        echo "${{ env.KUBE_CONFIG_DATA }}" > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }} --project ${{ env.PROJECT_ID }}
        
    - name: Apply Kubernetes Deployment and Service
      run: |
        kubectl apply -f deployment.yml --validate=false
        kubectl apply -f service.yml --validate=false

    - name: Update Deployment with new image
      run: |
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.IMAGE_NAME }}=us.gcr.io/${{ env.REPOSITORY }}:${{ env.TAG }}
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
